monsters_lair_threat = {
	scope = story
	utility = 1
	
	once_per_object = yes
	category = big_quest
	once_per_category = yes
	action = {
		spawn_prefab("npc", player) = {
			entity.random_offset=10
			create = player_marker
			entity.random_offset=10
			create = chief
		}
		spawn_prefab("npc", shaman_npc) = {
			entity.random_offset=10
			create = shaman
		}
		spawn_prefab("npc", healer_npc) = {
			entity.random_offset=10
			create = healer
		}

		spawn_prefab("loc", lair) = {
			entity.random_offset=10
			create = monsters_lair
		}
	}
}

old_altar_threat = {
	scope = story
	utility = 1
	
	once_per_object = yes
	category = big_quest
	once_per_category = yes
	action = {
		spawn_prefab("npc", player_npc) = {
			entity.random_offset=10
			create = player_marker
			entity.random_offset=10
			create = shaman
		}
		spawn_prefab("npc", chief_npc) = {
			entity.random_offset=10
			create = chief
		}
		spawn_prefab("npc", healer_npc) = {
			entity.random_offset=10
			create = healer
		}

		spawn_prefab("loc", altar) = {
			entity.random_offset=10
			create = ancient_altar
		}
	}
}

burial_disease_threat = {
	scope = story
	utility = 1
	
	once_per_object = yes
	category = big_quest
	once_per_category = yes
	action = {
		spawn_prefab("npc", player_npc) = {
			entity.random_offset=10
			create = player_marker
			entity.random_offset=10
			create = healer
		}

		spawn_prefab("npc", chief_npc) = {
			entity.random_offset=10
			create = chief
		}
		spawn_prefab("npc", shaman_npc) = {
			entity.random_offset=10
			create = shaman
		}
		spawn_prefab("loc", kurgan) = {
			entity.random_offset=10
			create = evil_kurgan
		}
	}	
}

warriors_worth_quest = {
	scope = story.fit(quests < 5)
	utility = 1
	
	once_per_object = yes
	category = big_quest
	once_per_category = yes
	action = {
		a = amount(all_actors, warrior)
		if(a < 3).repeat(random_range(3 - a,5 - a)) = {
			spawn_prefab("npc", human_npc) = {
				entity.random_offset=10
				create = warrior
			}	
		}
	}
}

blacksmith_materials_quest = {
	scope = story.fit(quests < 5)
	utility = 1
	
	once_per_object = yes
	category = quest
	only_max_utility = yes
	action = {
		spawn_prefab("npc", human_npc) = {
			entity.random_offset=10
			create = blacksmith
		}
	}
}

artisan_materials_quest = {
	scope = story.fit(quests < 5)
	utility = 1
	
	once_per_object = yes
	category = quest
	only_max_utility = yes
	action = {

		spawn_prefab("npc", human_npc) = {
			entity.random_offset=10
			create = blacksmith
		}
		story.quests = quests + 1
	}
}


old_friend_quest = {
	scope = story.fit(quests < 5 and amount(all_entities, yes) > 8)
	utility = 1
	
	once_per_object = yes
	category = quest
	only_max_utility = yes
	action = {
		spawn_prefab("npc", "old_friend") = {
			entity.random_offset=10
			create = artisan
			create = old_friend
		}

		story.quests = quests + 1
	}
}

forest_monster = {
	scope = story.fit(quests < 5)
	utility = 1
	
	once_per_object = yes
	category = quest
	only_max_utility = yes
	action = {
		spawn_prefab("npc", "monster") = {
			entity.random_offset=10
			create = monster
		}
		story.quests = quests + 1

	}
}

exotic_artifact = {
	scope = story.fit(quests < 5)
	utility = 1
	
	once_per_object = yes
	category = quest
	only_max_utility = yes
	action = {
		spawn_prefab("npc", human_npc) = {
			entity.random_offset=10
			create = trader
		}
		story.quests = quests + 1

	}
}

farm_is_infested = {
	scope = story.fit(quests < 5)
	utility = 1
	
	once_per_object = yes
	category = quest
	only_max_utility = yes
	action = {
		farmer_npc = no_one
		spawn_prefab("npc", "human_npc") = {
			entity.random_offset=10
			create = farmer
			farmer_npc = this
		}
		farm_loc = no_one
		spawn_prefab("loc", "farm") = {
			entity.random_offset=10
			create = infestation
			create = farm
			farm_loc = this
		}
		farm_loc.facts.add_owned.by = farmer_npc
		farmer_npc.facts.add_owner.of_what = farm_loc

		story.quests = quests + 1

	}
}

old_world_metal = {
	scope = story.fit(quests < 5)
	utility = 1
	
	once_per_object = yes
	category = quest
	only_max_utility = yes
	action = {
		mine_loc = no_one
		spawn_prefab("loc", "mine") = {
			entity.random_offset=10
			create = mine
			create = ancient
			mine_loc = this
		}
		spawn_prefab("npc", human_npc) = {
			entity.random_offset=10
			create = artisan
			facts.add_wants_old_world_metal.where = mine_loc
		}
		story.quests = quests + 1

	}
}

lost_apprentice = {
	scope = story.fit(quests < 5 and (amount(all_entities, blacksmith) > 0 or amount(all_entities, artisan) > 0))
	utility = 1
	
	once_per_object = yes
	category = quest
	only_max_utility = yes
	action = {
		master = any(all_entities, blacksmith)
		if(not has(master)).
			master = any(all_entities, artisan)
		app = no_one
		spawn_prefab("npc", human_npc) = {
			entity.random_offset=10
			r = random_range(0, 2)
			app = this
			app.create = artisan
			app.create(apprentice) = {
				of = master
			}
			master = {
				artisan = {
					own_apprentice = app
				}
				blacksmith = {
					own_apprentice = app
				}
			}
		}
		story.quests = quests + 1

	}
}